unit AppRAD.Controller.Generic;

interface

uses
  AppRAD.Controller.Interfaces,
  AppRAD.Model.DAO.Intefaces;

type
  TControllerGeneric<T> = class(TInterfacedObject, iControllerEntity<T>)
    private
      [weak]
      FParent : iController;
    public
      constructor Create(Parent : iController);
      destructor Destroy; override;
      class function New(Parent : iController) : iControllerEntity<T>;
      function DAO : iDAOGeneric<T>;
      function &End : iController;
  end;

implementation

{ TControllerGeneric }

constructor TControllerGeneric<T>.Create(Parent : iController);
begin
  FParent := Parent;
end;

destructor TControllerGeneric<T>.Destroy;
begin

  inherited;
end;

class function TControllerGeneric<T> .New(Parent : iController): iControllerEntity<T>;
begin
    Result := Self.Create(Parent);
end;

end.
